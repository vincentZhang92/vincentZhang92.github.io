(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{423:function(t,s,e){"use strict";e.r(s);var a=e(62),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"核心配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心配置"}},[t._v("#")]),t._v(" 核心配置")]),t._v(" "),e("h2",{attrs:{id:"input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" input")]),t._v(" "),e("p",[t._v("类型: string | string[] | { [entryName: string]: string }")]),t._v(" "),e("p",[t._v("命令: -i/--input <filename>")]),t._v(" "),e("p",[t._v("bundle的入口点(例如"),e("code",[t._v("main.js")]),t._v("或"),e("code",[t._v("app.js")]),t._v("或"),e("code",[t._v("index.js")]),t._v(")。如果您提供了一个入口点数组或一个将名称映射到入口点的对象，它们将被绑定到单独的输出块。除非 "),e("a",{attrs:{href:"#output-file"}},[t._v("output.file")]),t._v(" 选项被使用，否则生成的chunk名称将匹配"),e("code",[t._v("output.entryFileNames")]),t._v("选项。当使用对象形式时，文件名的"),e("code",[t._v("[name]")]),t._v("部分将是对象属性的名称，而对于数组形式，它将是入口点的文件名。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("在使用对象形式时，可以通过在名称中添加 "),e("code",[t._v("/")]),t._v(" 将入口点放入不同的子文件夹中。下面将生成至少两个入口chunk，名称分别为"),e("code",[t._v("entry-a.js")]),t._v("和"),e("code",[t._v("entry-b/index.js")]),t._v("，即文件"),e("code",[t._v("index.js")]),t._v("被放置在文件夹"),e("code",[t._v("entry-b")]),t._v("中:")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rollup.config.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("input")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src/main-a.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'b/index'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src/main-b.js'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("entryFileNames")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'entry-[name].js'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("如果某些插件在"),e("code",[t._v("buildStart")]),t._v("钩子的末尾发出至少一个chunk(使用this.emitFile)，则可以忽略该选项。")]),t._v(" "),e("p",[t._v("命令格式：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("rollup --format es --input src/entry1.js --input src/entry2.js\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于")]),t._v("\nrollup src/entry1.js src/entry2.js --format es\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# chunk可以通过在提供的值前添加 = 来命名:  ")]),t._v("\nrollup "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("src/entry1.js "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("other")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("src/entry2.js --format es\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以使用引号指定包含空格的文件名")]),t._v("\nrollup "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main entry"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/entry 1.js"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/other entry.js"')]),t._v(" --format es\n")])])]),e("h2",{attrs:{id:"output-dir"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-dir"}},[t._v("#")]),t._v(" output.dir")]),t._v(" "),e("p",[t._v("类型: string")]),t._v(" "),e("p",[t._v("命令: -d/--dir <dirname>")]),t._v(" "),e("p",[t._v("存放所有生成的"),e("code",[t._v("chunk")]),t._v("的目录。如果生成了多个"),e("code",[t._v("chunk")]),t._v("，则需要此选项。否则，可以使用 "),e("a",{attrs:{href:"#output-file"}},[t._v("file")]),t._v(" 选项代替。")]),t._v(" "),e("h2",{attrs:{id:"output-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-file"}},[t._v("#")]),t._v(" output.file")]),t._v(" "),e("p",[t._v("类型: string")]),t._v(" "),e("p",[t._v("命令: -o/--file <filename>")]),t._v(" "),e("p",[t._v("要写入的文件。如果适用，还将用于生成"),e("code",[t._v("sourcemap")]),t._v("。只有在不生成多个"),e("code",[t._v("chunk")]),t._v("的情况下才能使用。")]),t._v(" "),e("h2",{attrs:{id:"output-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-format"}},[t._v("#")]),t._v(" output.format")]),t._v(" "),e("p",[t._v("类型: string")]),t._v(" "),e("p",[t._v("命令: -f/--format <formatspecifier>")]),t._v(" "),e("p",[t._v("指定生成的包的格式。下列选项之一:")]),t._v(" "),e("ul",[e("li",[t._v("amd - 异步模块定义，与RequireJS等模块加载器一起使用；")]),t._v(" "),e("li",[t._v("cjs - CommonJS，适用于Node和其他绑定器(别名:"),e("code",[t._v("commonjs")]),t._v(")")]),t._v(" "),e("li",[t._v("es - 保持bundle为ES模块文件，适合于其他绑定器，并在现代浏览器中以<script type=module>标签的形式包含(别名:"),e("code",[t._v("esm")]),t._v(", "),e("code",[t._v("module")]),t._v(")")]),t._v(" "),e("li",[t._v("iife - 一个自动执行的函数，适合包含为<script>标记。(如果你想为你的应用程序创建一个bundle，你可能会想使用这个。) “iife”表示“立即调用"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数表达式"),e("OutboundLink")],1),t._v("”")]),t._v(" "),e("li",[t._v("umd - 通用模块定义，工作于"),e("code",[t._v("amd")]),t._v(", "),e("code",[t._v("cjs")]),t._v("和"),e("code",[t._v("life")])]),t._v(" "),e("li",[t._v("system - SystemJS加载器的原生格式(别名:systemjs)")])])])}),[],!1,null,null,null);s.default=r.exports}}]);